{"version":3,"sources":["components/CountryData/CountryPicker.module.css","components/StateData/StatePicker.module.css","components/Nav/Nav.jsx","api/index.js","components/GlobalChart/GlobalChart.jsx","components/CountryData/CountryPicker.jsx","components/BarChart/LocationChart.jsx","components/Title/Title.jsx","components/StateData/StatePicker.jsx","App.js","index.js","App.module.css"],"names":["module","exports","Nav","AppBar","position","Toolbar","Typography","variant","color","globalURL","statesURL","fetchCountryData","country","a","axios","get","data","confirmed","recovered","deaths","lastUpdate","modifiedData","value","Date","toDateString","arr","push","console","log","fetchGlobalDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","fetchStates","statesInfo","state","fetchStateData","stateData","filter","states","positive","death","dateModified","GlobalChart","useState","setDailyData","useEffect","apiValue","fetchAPI","Title","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","className","styles","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","LocationChart","barChart","fill","props","component","gutterBottom","children","handleStateChange","fetchedStates","setFetchedStates","App","globalData","countryData","stateName","stateCode","fetchedCountryData","setState","fetchedStateData","fetchedGlobalDailyData","this","Container","maxWidth","container","Grid","justify","spacing","item","xs","md","Paper","paper","lg","location","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae8f8023.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2mO4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"StatePicker_formControl__o8jj6\"};","import React from 'react';\r\n\r\nimport { Toolbar, Typography, AppBar } from '@material-ui/core';\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Covid 19 Data Charts\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst globalURL = 'https://covid19.mathdro.id/api';\r\nconst statesURL = 'https://covidtracking.com/api/states';\r\n\r\nexport const fetchCountryData = async (country) => {\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(`${globalURL}/countries/${country}`);\r\n\r\n    const modifiedData = {\r\n      confirmed: confirmed.value,\r\n      recovered: recovered.value,\r\n      deaths: deaths.value,\r\n      lastUpdate: new Date(lastUpdate).toDateString(),\r\n    }\r\n\r\n    let arr = [];\r\n    arr.push(modifiedData);\r\n  \r\n    return arr;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchGlobalDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${globalURL}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n  \r\n    return modifiedData;\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${globalURL}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchStates = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${statesURL}/info`);\r\n\r\n    const modifiedData = data.map((statesInfo) => ({\r\n      state: statesInfo.state,\r\n      name: statesInfo.name,\r\n    }));\r\n  \r\n    return modifiedData;\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchStateData = async (state) => {\r\n  try {\r\n    const { data } = await axios.get(`${statesURL}`);\r\n\r\n    let stateData = data.filter((states) => states.state === state);\r\n    const modifiedData = stateData.map((data) => ({\r\n      state: data.state,\r\n      confirmed: data.positive,\r\n      deaths: data.death,\r\n      recovered: (data.recovered ? data.recovered : 0),\r\n      lastUpdate: new Date(data.dateModified).toDateString(),\r\n    }));\r\n\r\n    return modifiedData;\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchGlobalDailyData } from '../../api';\r\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer, Legend, Tooltip, CartesianGrid } from 'recharts';\r\n//import { Line } from 'react-chartjs-2';\r\nimport { Title } from '../../components';\r\n\r\nexport default function GlobalChart() {\r\n\r\n  const [dailyData, setDailyData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      let apiValue = await fetchGlobalDailyData();\r\n      \r\n      // Just variables to help me understand what is going on with the individual data\r\n      // const dates = apiValue.map(({ date }) => date);\r\n      // const confirmedCases = apiValue.map(({ confirmed }) => confirmed);\r\n      // const covidDeaths = apiValue.map(({ deaths }) => deaths);\r\n\r\n      // const chartData = [];\r\n      // for(let i = 0; i < dates.length; i++) {\r\n      //   const newRow = {};\r\n      //   newRow.date = dates[i];\r\n      //   newRow.confirmed = confirmedCases[i];\r\n      //   newRow.deaths = covidDeaths[i];\r\n      //   chartData.push(newRow);\r\n      // }\r\n\r\n      // console.log(chartData);\r\n      // console.log(apiValue);\r\n      // console.log(dates);\r\n      // console.log(confirmedCases);\r\n      // console.log(covidDeaths);\r\n      setDailyData(apiValue);\r\n    }\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n\r\n  // const lineChart = (\r\n    \r\n  //   // Orignally using react charts 2 and charts.js\r\n  //   // dailyData.length\r\n  //   // ? (\r\n  //   //   <Line\r\n  //   //     data={{\r\n  //   //       labels: dailyData.map(({ date }) => date),\r\n  //   //       datasets: [{\r\n  //   //         data: dailyData.map(({ confirmed }) => confirmed),\r\n  //   //         label: 'Infected',\r\n  //   //         borderColor: '#3333ff',\r\n  //   //         fill: true,\r\n  //   //       }, {\r\n  //   //         data: dailyData.map(({ deaths }) => deaths),\r\n  //   //         label: 'Deaths',\r\n  //   //         borderColor: 'red',\r\n  //   //         backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n  //   //         fill: true,\r\n  //   //       }],\r\n  //   //     }}\r\n  //   // />) : null\r\n\r\n\r\n\r\n  //   // Using Recharts\r\n    \r\n  // );\r\n\r\n  return (\r\n    <div>\r\n      <Title>Covid 19 Global Chart</Title>\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n      <LineChart data={dailyData}\r\n        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"red\" />\r\n      </LineChart>\r\n      </ResponsiveContainer>\r\n      {/* {lineChart} */}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport{ fetchCountries } from '../../api';\r\n\r\nexport default function CountryPicker({ handleCountryChange }) {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\"> - </option>\r\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, ResponsiveContainer, Legend, Tooltip, CartesianGrid } from 'recharts';\r\n\r\n\r\nexport default function LocationChart({ data, country }) {\r\n\r\n  // let locationData = [];\r\n  // locationData.push(data);\r\n\r\n  const barChart = (\r\n    <ResponsiveContainer width=\"100%\" height={250}>\r\n      <BarChart data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"lastUpdate\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"confirmed\" fill=\"#8884d8\" />\r\n        <Bar dataKey=\"deaths\" fill=\"red\" />\r\n        <Bar dataKey=\"recovered\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n    \r\n  )\r\n  return (\r\n    <div>\r\n      {barChart}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h1\" variant=\"h4\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './StatePicker.module.css';\r\n\r\nimport{ fetchStates } from '../../api';\r\n\r\nexport default function CountryPicker({ handleStateChange }) {\r\n  const [fetchedStates, setFetchedStates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedStates(await fetchStates());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, [setFetchedStates]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => {handleStateChange(e.target.value)}}>\r\n        <option value=\"\"> - </option>\r\n        {fetchedStates.map((state, i) => <option key={i} value={state.state}>{state.name}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { Nav, GlobalChart, CountryPicker, LocationChart, Title, StatePicker } from './components';\r\nimport { Container, Grid, Paper } from '@material-ui/core';\r\n\r\nimport styles from './App.module.css';\r\n\r\nimport { fetchGlobalDailyData, fetchCountryData, fetchStateData } from './api';\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    globalData: {},\r\n    countryData: {},\r\n    country: '',\r\n    stateData: {},\r\n    stateName: '',\r\n    stateCode: '',\r\n  }\r\n \r\n  async componentDidMount() {\r\n    const fetchedGlobalDailyData = await fetchGlobalDailyData();\r\n\r\n    this.setState({ globalData: fetchedGlobalDailyData })\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedCountryData = await fetchCountryData(country);\r\n\r\n    this.setState({ countryData: fetchedCountryData, country: country });\r\n  }\r\n\r\n  handleStateChange = async (state) => {\r\n    const fetchedStateData = await fetchStateData(state);\r\n\r\n    this.setState({ stateData: fetchedStateData, stateCode: state });\r\n  }\r\n\r\n  render() {\r\n    const { globalData, countryData, country, stateData, stateCode } = this.state;\r\n    return (\r\n      <div>\r\n        <Nav />\r\n        <Container maxWidth=\"lg\" className={styles.container}>\r\n          <Grid container justify=\"center\"spacing={2}>\r\n            <Grid item xs={12} md={8}>\r\n              <Paper className={styles.paper}>\r\n                <GlobalChart data={globalData} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={6}>\r\n              <Paper className={styles.paper}>\r\n                <Title>Covid 19 Country Data</Title>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <LocationChart data={countryData} location={country} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={6}>\r\n              <Paper className={styles.paper}>\r\n                <Title>Covid 19 US State Data</Title>\r\n                <StatePicker handleStateChange={this.handleStateChange} />\r\n                <LocationChart data={stateData} location={stateCode} />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3GuoG\",\"paper\":\"App_paper__2mUwH\",\"countryPicker\":\"App_countryPicker__SmdfL\"};"],"sourceRoot":""}